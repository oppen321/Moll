name: "naiveproxy"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: "0 */8 * * *"
env:
  TZ: Asia/Shanghai

jobs:
  job_init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          sudo timedatectl set-timezone "$TZ"

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
        
      - name: SSH connection to Actions
        uses: kenzok78/ssh-action@master
        if: (github.event.inputs.ssh == 'false' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

  job_auto_update_packages:
    if: ${{ always() }}
    needs: job_init
    runs-on: ubuntu-latest
    name: update-${{ matrix.pakcages }}
    strategy:
      fail-fast: false
      matrix:
        pakcages: [naiveproxy]
        include:
          - pakcages: naiveproxy-aarch64_cortex-a53
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 23
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-aarch64_cortex-a53.tar.xz
            
          - pakcages: naiveproxy-aarch64_cortex-a72
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 25
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-aarch64_cortex-a72.tar.xz

          - pakcages: naiveproxy-aarch64_generic
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 27
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-aarch64_generic.tar.xz
            
          - pakcages: naiveproxy-arm_arm1176jzf-s_vfp
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 29
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_arm1176jzf-s_vfp.tar.xz        

          - pakcages: naiveproxy-arm_arm926ej-s
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 31
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_arm926ej-s.tar.xz
            
          - pakcages: naiveproxy-arm_cortex-a15_neon-vfpv4
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 33
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a15_neon-vfpv4.tar.xz
            
          - pakcages: naiveproxy-arm_cortex-a5_vfpv4
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 35
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a5_vfpv4.tar.xz

          - pakcages: naiveproxy-arm_cortex-a7
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 37
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a7.tar.xz
            
          - pakcages: naiveproxy-a7_neon-vfpv4
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 39
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a7_neon-vfpv4.tar.xz

          - pakcages: naiveproxy-arm_cortex-a7_vfpv4
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 41
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a7_vfpv4.tar.xz
            
          - pakcages: naiveproxy-arm_cortex-a8_vfpv3
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 43
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a8_vfpv3.tar.xz        

          - pakcages: naiveproxy-arm_cortex-a9
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 45
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a9.tar.xz
            
          - pakcages: naiveproxy-arm_cortex-a9_neon
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 47
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a9_neon.tar.xz
            
          - pakcages: naiveproxy-arm_cortex-a9_vfpv3-d16
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 49
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_cortex-a9_vfpv3-d16.tar.xz

          - pakcages: naiveproxy-arm_mpcore
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 51
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_mpcore.tar.xz
            
          - pakcages: naiveproxy-arm_xscale
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 53
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-arm_xscale.tar.xz

          - pakcages: naiveproxy-mipsel_24kc
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 55
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-mipsel_24kc.tar.xz
            
          - pakcages: naiveproxy-mipsel_mips32
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 57
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-mipsel_mips32.tar.xz        

          - pakcages: naiveproxy-riscv64
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 59
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-riscv64.tar.xz
            
          - pakcages: naiveproxy-x86
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 61
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-x86.tar.xz
            
          - pakcages: naiveproxy-x86_64
            folder: naiveproxy
            version_head: PKG_VERSION:=
            hash_head: \  PKG_HASH:=
            version_line:
            hash_line: 63
            release_api_command: curl -sL "https://api.github.com/repos/klzgrad/naiveproxy/releases" | jq -r 'map(select(.prerelease == false)) | first | .tag_name' | sed -e 's/.*v//'
            release_download_url: https://github.com/klzgrad/naiveproxy/releases/download/v
            file_name: /naiveproxy-v$New_PKG_VERSION-openwrt-x86_64.tar.xz                      

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          cd && mkdir -p pack && cd pack
          sudo timedatectl set-timezone "$TZ"

      - name: Check ${{ matrix.pakcages }}
        id: check
        run: |
          is_continue=false

          if [ "$is_continue" = "false" ]; then
            cd && cd $GITHUB_WORKSPACE/${{ matrix.folder }}
            if [ ! -n "${{ matrix.version_line }}" ] ; then
              Old_PKG_VERSION=$(sed -n '/^${{ matrix.version_head }}/p' Makefile | awk -F '=' '{print $2}');
            else
              Old_PKG_VERSION=$(sed -n '${{ matrix.version_line }}p' Makefile | awk -F '=' '{print $2}');
            fi
            New_PKG_VERSION=$(${{ matrix.release_api_command }})
            echo "${{ matrix.pakcages }}目前版本: $Old_PKG_VERSION"
            echo "${{ matrix.pakcages }}最新版本: $New_PKG_VERSION"
            if [ "$Old_PKG_VERSION" = "$New_PKG_VERSION" ]; then 
              echo "status=failure" >> $GITHUB_OUTPUT; 
              echo "${{ matrix.pakcages }}版本为最新版本$New_PKG_VERSION,无需更新"; 
            else 
              echo "New_PKG_VERSION=$New_PKG_VERSION" >> $GITHUB_OUTPUT;  
              echo "status=success" >> $GITHUB_OUTPUT;
            fi
          else
            echo "status=failure" >> $GITHUB_OUTPUT;
          fi

      - name: Update ${{ matrix.pakcages }}
        id: update
        if: steps.check.outputs.status == 'success' && steps.check.outputs.New_PKG_VERSION != '' && !cancelled()
        run: |
          cd && cd $GITHUB_WORKSPACE/${{ matrix.folder }}
          New_PKG_VERSION=${{ steps.check.outputs.New_PKG_VERSION }}
          if [ ! -n "${{ matrix.version_line }}" ] ; then
            sed -i "/^${{ matrix.version_head }}/c\${{ matrix.version_head }}$New_PKG_VERSION" Makefile;
          else
            sed -i "${{ matrix.version_line }}c ${{ matrix.version_head }}$New_PKG_VERSION" Makefile;
          fi
          cd && cd pack && mkdir -p ${{ matrix.pakcages }} && cd ${{ matrix.pakcages }}
          wget -P / ${{ matrix.release_download_url }}$New_PKG_VERSION${{ matrix.file_name }}
          file_name=${{ matrix.file_name }}

          is_v=$(echo ${{ matrix.release_download_url }} | awk -F/ '{print $NF}')

          if [ ! -n "${{ matrix.file_name }}" ]; then PKG_HASH=$(sha256sum $is_v$New_PKG_VERSION) && PKG_HASH=${PKG_HASH%% *}; else PKG_HASH=$(sha256sum ${file_name##*/}) && PKG_HASH=${PKG_HASH%% *}; fi;
          cd && cd $GITHUB_WORKSPACE/${{ matrix.folder }} 
          if [ ! -n "${{ matrix.hash_line }}" ] ; then
            sed -i "/^${{ matrix.hash_head }}/c\${{ matrix.hash_head }}$PKG_HASH" Makefile;
          else
            sed -i "${{ matrix.hash_line }}c ${{ matrix.hash_head }}$PKG_HASH" Makefile;
          fi
          echo "已更新${{ matrix.pakcages }}版本到: $New_PKG_VERSION"
          echo "${{ matrix.pakcages }} Hash:$PKG_HASH"
          cd && cd pack
          echo ":white_check_mark: ${{ matrix.pakcages }}: update to $New_PKG_VERSION" >> commit_messages.txt
          echo "version=$New_PKG_VERSION" >> $GITHUB_OUTPUT

          cd && cd $GITHUB_WORKSPACE
          echo "branch_exists=$(git ls-remote --heads origin patches-${{ matrix.pakcages }}-$New_PKG_VERSION | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: cpr
        if: steps.check.outputs.status == 'success' && steps.check.outputs.New_PKG_VERSION != '' && steps.update.outputs.branch_exists == '' && !cancelled()
        uses: peter-evans/create-pull-request@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "${{ matrix.pakcages }}: update to ${{ steps.update.outputs.version }}"
          committer: action <actions@github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: patches-${{ matrix.pakcages }}-${{ steps.update.outputs.version }}
          base: main
          delete-branch: false
          body: |
            ${{ matrix.pakcages }}: update to ${{ steps.update.outputs.version }}
          title: "${{ matrix.pakcages }}: update to ${{ steps.update.outputs.version }}"
          labels: |
            automated-pr
          draft: false
